#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast and fail hard.
set -eo pipefail

[ $(uname) == "Darwin" ] && SED_FLAG='-l' || SED_FLAG='-u'
# Syntax sugar.
indent() {
    RE="s/^/       /"
    sed $SED_FLAG "$RE"
}

#variables
BIN_S3_BUCKET="https://s3.amazonaws.com/rjoc-heroku"

PHP_VERSION="5.4.11"
HG_VERSION="2.5.2"
SVN_VERSION="1.7.8"

COMPOSER_LOCATION="https://getcomposer.org/composer.phar"
AWSCMD_LOCATION="https://raw.github.com/timkay/aws/master/aws"

#GITHUB_API_KEY="" # add yours or enable https://devcenter.heroku.com/articles/labs-user-env-compile
#AWS_ACCESS_KEY="" # add yours or enable https://devcenter.heroku.com/articles/labs-user-env-compile
#AWS_SECRET_KEY="" # add yours or enable https://devcenter.heroku.com/articles/labs-user-env-compile
#S3_BUCKET="" # add yours or enable https://devcenter.heroku.com/articles/labs-user-env-compile

## you shouldn't need to edit below this line

# paths in the build system
BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
ROOT_DIR=$(dirname $BIN_DIR)
BUILD_DIR=$1
CACHE_DIR=$2

export PATH=$BUILD_DIR/vendor/bin/:$BUILD_DIR/vendor/php/bin/:$BUILD_DIR/vendor/bin/:$BUILD_DIR/vendor/satis/bin/:$PATH
export PYTHONPATH=$BUILD_DIR/vendor/bin/python2.7/site-packages:$PYTHONPATH
export PHP_INI_SCAN_DIR=$BUILD_DIR/vendor/php/conf.d/

# Work in the build directory
cd $BUILD_DIR

# vendor php
echo "-----> Vendoring PHP (v${PHP_VERSION})"
mkdir -p $BUILD_DIR/vendor/php
curl --silent --max-time 60 --location $BIN_S3_BUCKET/php-$PHP_VERSION.tgz | tar xz -C $BUILD_DIR/vendor/php
mkdir -p $BUILD_DIR/vendor/php/conf.d
echo "date.timezone='UTC'" >> $BUILD_DIR/vendor/php/conf.d/timezone.ini
echo "Complete" | indent

# set up composer config file
mkdir -p $BUILD_DIR/.profile.d
cat >>$BUILD_DIR/.profile.d/composer.sh <<EOF
#!/usr/bin/env bash
export PATH=/app/vendor/satis/bin:/app/vendor/bin:/app/vendor/php/bin:/usr/local/bin:/usr/bin:/bin:${PATH}
export PYTHONPATH=/app/vendor/bin/python2.7/site-packages:${PYTHONPATH}

if [ -n "\$GITHUB_API_KEY" ]; then
    composer.phar config --global github-oauth.github.com \$GITHUB_API_KEY;
fi
EOF
chmod +x $BUILD_DIR/.profile.d/composer.sh

# vendor composer
echo "-----> Vendoring Composer"
mkdir -p $BUILD_DIR/vendor/bin
curl --silent --max-time 60 --location "$COMPOSER_LOCATION" > $BUILD_DIR/vendor/bin/composer.phar
mkdir -p $BUILD_DIR/.composer
chmod 0755 $BUILD_DIR/vendor/bin/composer.phar
bash $BUILD_DIR/.profile.d/composer.sh
echo "Complete" | indent

# vendor s3-bash
echo "-----> Vendoring timkay/aws"
cd $BUILD_DIR/vendor
curl --silent --max-time 60 --location $AWSCMD_LOCATION -o bin/aws
chmod 0755 $BUILD_DIR/vendor/bin/aws
cd $BUILD_DIR
echo "Complete" | indent

# vendor subversion
echo "-----> Vendoring Subversion (v${SVN_VERSION})"
cd $BUILD_DIR/vendor
mkdir -p subversion
curl --silent --max-time 60 --location $BIN_S3_BUCKET/subversion-$SVN_VERSION.tgz | tar xz --strip=1 -C bin
cd $BUILD_DIR
echo "Complete" | indent

# vendor mercurial
echo "-----> Vendoring Mercurial (v${HG_VERSION})"
cd $BUILD_DIR/vendor
mkdir -p mercurial
curl --silent --max-time 60 --location $BIN_S3_BUCKET/mercurial-$HG_VERSION.tgz | tar xz --strip=1 -C bin
cd $BUILD_DIR
echo "Complete" | indent

# vendor satis
echo "-----> Vendoring composer/satis"
cd $BUILD_DIR/vendor
composer.phar create-project composer/satis --stability=dev --prefer-dist --no-interaction | indent
chmod 0755 $BUILD_DIR/vendor/satis/bin/satis $BUILD_DIR/vendor/satis/bin/compile
cd $BUILD_DIR
echo "Complete" | indent
cat >>$BUILD_DIR/vendor/bin/rebuild <<EOF
#!/usr/bin/env bash

satis build satis.json web/ --no-interaction && aws mkdir $S3_BUCKET && aws put $S3_BUCKET/index.html web/index.html --public && aws put $S3_BUCKET/packages.json web/packages.json --public
echo '<?xml version="1.0" encoding="UTF-8"?>
<WebsiteConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/">
<IndexDocument>
<Suffix>index.html</Suffix>
</IndexDocument>
</WebsiteConfiguration>' | aws put \$S3_BUCKET?website

EOF
chmod +x $BUILD_DIR/vendor/bin/rebuild

# run satis
mkdir -p web
echo "-----> Initalizing composer/satis"
rebuild | indent
rm -rf $BUILD_DIR/.composer/config.json
echo "Complete" | indent

# create router.php
echo "-----> Creating Router"
cp -r $ROOT_DIR/www $BUILD_DIR
echo "Complete" | indent
