#!/usr/bin/env bash

# don't forget to $ export AWS_ID=xxx AWS_SECRET=yyy S3_BUCKET=zzz

set -e

PHP_VERSION="$1"

if [ -z "$PHP_VERSION" ]; then
    echo "usage: $0 PHP_VERSION"
    echo "e.g. $0 5.4.11"
    exit 1
fi

if [ -z "$AWS_ID" ]; then
    echo "must set AWS_ID"
    echo "e.g. export AWS_ID=xxx"
    exit 1
fi

if [ -z "$AWS_SECRET" ]; then
    echo "must set AWS_SECRET"
    echo "e.g. export AWS_SECRET=yyy"
    exit 1
fi

if [ -z "$S3_BUCKET" ]; then
    echo "must set S3_BUCKET"
    echo "e.g. export S3_BUCKET=zzz"
    exit 1
fi

basedir="$( cd -P "$( dirname "$0" )" && pwd )"

echo "Preparing PHP (v${PHP_VERSION})"
# make a temp directory
tempdir="$( mktemp -t php_XXXX )"
rm -rf $tempdir
mkdir -p $tempdir
cd $tempdir

# download and extract php
curl --silent --max-time 60 --location http://us.php.net/get/php-${PHP_VERSION}.tar.gz/from/www.php.net/mirror -o php-${PHP_VERSION}.tar.gz
tar xzf php-${PHP_VERSION}.tar.gz

# build and package php for heroku  
vulcan build -v \
    -n php \
    -c "./configure --prefix=/app/vendor/php --with-curl=/usr/lib --with-config-file-path=/app/vendor/php --with-config-file-scan-dir=/app/vendor/php/conf.d --with-zlib --with-openssl --enable-zip && make install" \
    -p /app/vendor/php \
    -s php-${PHP_VERSION} \
    -o $tempdir/php-${PHP_VERSION}.tgz

echo "Uploading PHP (v${PHP_VERSION}) to Amazon S3 bucket: ${S3_BUCKET}"
# upload php to s3
$basedir/aws/s3 put $S3_BUCKET \
    php-${PHP_VERSION}.tgz $tempdir/php-${PHP_VERSION}.tgz
echo "Build, package and upload of PHP (v${PHP_VERSION}) complete"